group = "io.fullview.mobile.flutter_fullview"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.1.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "io.fullview.mobile.flutter_fullview"

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 27
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
        implementation("io.fullview:fullview-sdk:0.9.3")
        implementation("com.android.support:appcompat-v7:27.1.0")
        implementation("com.android.support.constraint:constraint-layout:1.1.3")
        implementation("com.google.android.material:material:1.12.0")
        implementation("io.insert-koin:koin-core:3.2.0")
        implementation("io.insert-koin:koin-android:3.2.0")
        implementation("com.squareup.retrofit2:converter-gson:2.9.0")
        implementation("com.jakewharton.timber:timber:5.0.1")
        implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.6")
        implementation("androidx.fragment:fragment-ktx:1.8.3")
        implementation("com.squareup.okhttp3:logging-interceptor:4.11.0")
        implementation("co.daily:client:0.24.0")
        implementation("com.microsoft.signalr:signalr:8.0.8")
        implementation("com.microsoft.signalr.messagepack:signalr-messagepack:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
